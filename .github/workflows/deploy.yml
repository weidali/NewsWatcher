name: Deploy News Watcher

on:
    push:
      tags:
        - 'v*'    # –¢–æ–ª—å–∫–æ —Ç–µ–≥–∏ –≤–∏–¥–∞ v1.0.0, v2.3.4 –∏ —Ç.–ø.
    workflow_dispatch:
      inputs:
        install_dependencies:
          description: '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ'
          required: false
          default: 'false'

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: reg_ru  # <-- –∏–º—è —Ç–≤–æ–µ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤ GitHub (–≤–∞–∂–Ω–æ!)

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: 3.x

    # –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    - name: Cache Python dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.8.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Check for changes
      run: |
        git fetch
        LOCAL=$(git rev-parse HEAD)
        REMOTE=$(git rev-parse origin/main)  # –∏–ª–∏ origin/master
        if [ $LOCAL != $REMOTE ]; then
          echo "üö® Changes detected, deploying..."
        else
          echo "‚úÖ No changes detected, skipping deploy."
          exit 0
        fi
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ, –µ—Å–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä install_dependencies = true
    - name: Install dependencies on server
      if: ${{ github.event.inputs.install_dependencies == 'true' }}
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} <<'ENDSSH'
          set -e
          echo "üöÄ Installing dependencies on server..."
          cd /var/www/${{ secrets.SSH_USER }}/data/www/NewsWatcher
          python3 -m pip install --upgrade pip
          pip install -r requirements.txt
          echo "‚úÖ Dependencies installed successfully!"
        ENDSSH

    - name: Create .env file
      run: |
        echo "BOT_TOKEN=${{ secrets.BOT_TOKEN }}" > .env
        echo "CHAT_ID=${{ secrets.CHAT_ID }}" >> .env

    - name: Deploy to server
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} <<'ENDSSH'
          set -e
          echo "üöÄ Deploying version: ${{ github.ref_name }}"
          cd /var/www/${{ secrets.SSH_USER }}/data/www/NewsWatcher
          git pull

          # –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
          source venv/bin/activate

          # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
          pip install -r requirements.txt

          # –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
          python news_watcher.py
          echo "‚úÖ Deployed successfully!"
        ENDSSH

    - name: Notify on successful deploy
      env:
        BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
        CHAT_ID: ${{ secrets.CHAT_ID }}
      run: |
        curl -s -X POST "https://api.telegram.org/bot${BOT_TOKEN}/sendMessage" \
        -d chat_id="${CHAT_ID}" \
        -d text="‚úÖ News Watcher —É—Å–ø–µ—à–Ω–æ –∑–∞–¥–µ–ø–ª–æ–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä!"
